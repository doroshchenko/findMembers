imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@AppBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    user_avatar_directory: '%kernel.root_dir%/../web/images/users'

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    translator: ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        url: 'mysql://b9f72ea1dacff6:6f7865db@us-cdbr-iron-east-04.cleardb.net/heroku_cc26dbe2517d33e'
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

#Assetic Bundle configuration
assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~
        scssphp:
            formatter: 'Leafo\ScssPhp\Formatter\Compressed'
        jsqueeze: ~
    assets:
        jquery_and_ui:
            inputs:
                 - '@AppBundle/Resources/public/js/libs/jquery-3.1.1.js'
                 - '@AppBundle/Resources/public/js/libs/jquery-ui-1.12.1/jquery-ui.js'
        materialize:
            inputs:
                 - '@AppBundle/Resources/public/styles/materialize/js/materialize.min.js'
        font-awesome-woff:
            inputs:
                - '@AppBundle/Resources/public/styles/materialize/fonts/roboto/Roboto-Regular.woff2'
            output: 'fonts/roboto/Roboto-Regular.woff2'

# FOS user configuration
fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: "test@gmail.com%"
        sender_name: "test-user"

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations

vich_uploader:
    db_driver: orm # or mongodb or propel or phpcr

liip_imagine:
    resolvers:
        default:
            web_path: ~

    filter_sets:
        cache: ~

        # the name of the "filter set"
        my_thumb:
            # adjust the image quality to 75%
            quality: 75
            # list of transformations to apply (the "filters")
            filters:
                # create a thumbnail: set size to 120x90 and use the "outbound" mode
                # to crop the image when the size ratio of the input differs
                thumbnail: { size: [105, 105], mode: outbound }
                # create a 2px black border: center the thumbnail on a black background
                # 4px larger to create a 2px border around the final image
                background: { size: [105, 105], position: center, color: '#000000' }
        user_icon_thumb:
            quality: 75
            filters:
                thumbnail: { size: [55, 55], mode: outbound }
                background: { size: [55, 55], position: center, color: '#000000' }